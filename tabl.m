function res = tabl(~)
% tabl() calculates and returns the state table of the convulation code.
% convolution code (2, 1, 7) has 2^6 states which start from 000000 to 111111.
% The states is mapped to rows of the table by calculating the decimal value of that state plus one.
% 000000 is mapped to row no ( 0 + 1)= 1  ; 000001 is mapped to row no ( 1 + 1)=2 ; 000101 is mapped to row no (5+1)=6 and so on.
% The table contains four columns.
% For a particular states when the incomming bit is 0 , then the value calculates by applying generating function g1 is stored in column no 1 and
% row calculated using that state while the value calculated by applying generating function g2 is stored in column no 2 and corresponding row.
% For a particular states when the incomming bit is 1 , then the value calculates by applying generating function g1 is stored in column no 3 and 
% row calculated using that state while the value calculated by applying generating function g2 is stored in column no 4 and corresponding row..


% generating function g1
g1 = [1 1 0 1 0 1 0];
% generating function g2
g2 = [1 1 1 0 1 1 0];

% generating all decimal values from 0 to 63 and storing as decimal in b
d = (0:63)';
b = de2bi(d);
b = fliplr(b);

res = zeros(64,4);

% filling the state table as described in the above section.For example i=5 will correspond to row no. 5 which will be state 000100 ( = row_no - 1 )
% and the values put at appropriate column.
for i = 1:64
    
    % caculating temporary state and finding the transition value using
    % generator function
    temp(2:7)=b(i,:);
    
    % for path 0 storing value generated by generator function
    temp(1)=0;
       for iter = 1:7
       w1(iter) = temp(iter)*g1(iter);
       w2(iter) = temp(iter)*g2(iter);
       end
    temp1 =mod(sum(w1),2);
    temp2 =mod(sum(w2),2);
    
    res(i,1)= temp1;
    res(i,2)= temp2;
    
    % for path 1 storing value generated by generator function
    temp(1)=1;
       for iter = 1:7
       w1(iter) = temp(iter)*g1(iter);
       w2(iter) = temp(iter)*g2(iter);
 
       end
    temp1 =mod(sum(w1),2);
    temp2 =mod(sum(w2),2);
    
    res(i,3)= temp1;
    res(i,4)= temp2;
    
end

